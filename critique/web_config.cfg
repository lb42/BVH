# -*- coding: utf-8 -*-"
####################################################
#### Web configuration options for PhiloLogic4 #####
####################################################
### All variables must be in valid Python syntax ###
####################################################


# The dbname variable is the title name in the HTML header
dbname = 'moliere-critique'

# The db_url variable is the root URL for your database on the web
db_url = 'http://obvil-dev.paris-sorbonne.fr/philologic/moliere-critique'

# Configure access control with True or False.
# Note that if you want access control, you have to provide a login.txt file inside your /data directory,
# otherwise access will remain open.
access_control = False

# Location of access file which contains authorized/unauthorized IPs and domain names
access_file = ''

# Do not set to False unless you want to make changes in the Web Client in the app/ directory
production = True

# The search_reports variable sets which search report is viewable in the search form
# Available reports are concordance, kwic, collocation, and time_series
search_reports = ['concordance', 'kwic', 'collocation', 'time_series']

# The metadata variable sets which metadata field is viewable in the search form
metadata = ['title', 'author', 'date']

# The metadata_aliases variable allows to display a metadata variable under a different name in the HTML
# For example, you could rename the who metadata to Speaker, and the create_date variable to Date like so:
# metadata_aliases = {'who': 'Speaker', 'create_date', 'Date'}
metadata_aliases = {}

# The facets variable sets which metadata field can be used as a facet
# The object format is a list of objects like the following: [{'Author': ['author']}, {'Title': ['title', 'author']}
# The dict key should describe what the facets will do, and the dict value, which has to be a list,
# should list the metadata to be used for the frequency counts
facets = [{'title': ['title']}, {'author': ['author']}, {'date': ['date']}]

# The word_facets variable functions much like the facets variable, but describes metadata
# attached to word or phrases results and stored in the (optional) words table. Experimental.
words_facets = []

# The concordance_length variable sets the length in bytes of each concordance result
concordance_length = 300

# The search_examples variable defines which examples should be provided for each searchable field in the search form.
# If None is the value, or there are any missing examples, defaults will be generated at runtime by picking the first
# result for any given field. If you wish to change these default values, you should configure them here like so:
# search_examples = {"author": "Jean-Jacques Rousseau", "title": "Du contrat social"}
search_examples = {'date': u'1865', 'head': u'Premi\xe8re conf\xe9rence : La femme niaise, la femme savante, la femme coquette.', 'author': u'Aderer, Adolphe (1832-1886)', 'filename': u'aderer_femmes-comedies.xml', 'title': u"Conf\xe9rences de l'H\xf4tel de Ville de Versailles 1864-1865. Les Femmes dans la com\xe9die de Moli\xe8re. Deux conf\xe9rences."}


# The stopwords variable defines a file path containing a list of words (one word per line) used for filtering out words
# in the collocation report. The file must be located in the defined path. If the file is not found,
# no option for using a stopword list will be displayed in collocation searches.
stopwords = '/var/www/obvil/html/philologic/fr-stop.txt'

# The theme variable defines the default CSS theme to be used in the WebApp. The default theme called default_theme.css
# can be edited directly or you can define a new CSS file below. This file must be located in the app/assets/css/split/ directory for the Web App to find it.
theme = 'default_theme.css'

# The dictionary variable enables a different search interface with the headword as its starting point. It is turned off by default
dictionary = False

# The landing_page_browsing_type variable defines what type of landing page. Values available are 'default' or 'dictionary'
landing_page_browsing_type = 'default'

# The landing_page_browsing variable defines which browsing functions are exposed in the landing page. The only options
# are author, title, date, and default_display. For author and title, you have to define a list of ranges, such as 'author': ['A-L', 'M-Z'],
# and for date you need to define three variables: start_date, end_date, interval: e.g. "date": {"start": 1600, "end": 1800, "interval": 25}
# default_display allows you to load content by default. It is a dictionary that contains a type and a range, e.g. = "default_display": {"type": "title", "range": "A-D"}
# Note that no default is provided for "date" or default_value: they are therefore disabled
landing_page_browsing = {'date': {}, 'title': ['A-Z'], 'default_display': {}, 'author': ['A-Z']}

# The dico_letter_range variables defines a set of letters corresponding to the first letter of a headword. This generates a set of buttons
# for browsing the database available on the landing page. The default represents the entire roman alphabet.
dico_letter_range = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']

# The dico_citation variable set to True enables a dictionary citation in concordances. Headword is cited first, followed by author if relevant,
# or class of knowledge if available.
dico_citation = False

# The kwic_bibliography_fields variable variable defines which bibliography fields will be displayed in the KWIC view. It should be
# modified with extra care in conjunction with the concordance_citation function located in reports/concordance.py.                # If the variable is an empty list, the first two fields in the metadata variable will be used.
kwic_bibliography_fields = []

# The title_prefix_removal variable is only used for displaying titles in a proper order in the landing page browsing function.
# It is used to ignore predefined words at the beginning of a title for sorting purposes.
# e.g: ["the ", "a "] will ignore "the " and "a " for sorting in titles such as "The First Part of King Henry the Fourth", or "A Midsummer Night's Dream".
# Don't forget to add a space after your prefix or the prefix will match partial words.
title_prefix_removal = []

# The page_images_url_root variable defines a root URL where pages images can be fetched when a filename is provided inside a page tag.
# Note that the page image filename must be inside a fac or id attribute such as:
# <pb fac="filename.jpg"> or <pb id="filename.jpg">
# So a URL of http://my-server.com/images/ will resolve to http://my-server.com/images/filename.jpg.
page_images_url_root = ''


# The logo variable defines the location of an image to display on the landing page, just below the
# search form. It can be a relative URL, or an absolute link, in which case you want to make sure
# it starts with http://. If no logo is defined, no picture will be displayed.
logo = ''

